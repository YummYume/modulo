# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    host_domain: "%env(HOST_DOMAIN)%"
    host_domain_api: "api.%env(HOST_DOMAIN)%"
    host_domain_admin: "admin.%env(HOST_DOMAIN)%"
    public_site_url: "%env(PUBLIC_SITE_URL)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $mailSender: "%env(string:MAILER_SENDER)%"
            $projectDir: "%kernel.project_dir%"

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/*"
        exclude: "../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}"

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\OpenApi\JwtDecorator:
        decorates: "api_platform.openapi.factory"
        arguments: ["@.inner"]

    app.jwt_extended_authenticator:
        class: App\Security\JWTExtendedAuthenticator
        parent: lexik_jwt_authentication.security.jwt_authenticator

    # Listeners
    acme_api.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - {
                  name: kernel.event_listener,
                  event: lexik_jwt_authentication.on_authentication_success,
                  method: onAuthenticationSuccessResponse
              }

    acme_api.event.jwt_created_listener:
        class: App\EventListener\JWTCreatedListener
        arguments: [ '@request_stack' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    acme_api.event.jwt_decoded_listener:
        class: App\EventListener\JWTDecodedListener
        arguments: [ '@request_stack' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_decoded, method: onJWTDecoded }

    acme_api.event.jwt_authenticated_listener:
        class: App\EventListener\JWTAuthenticatedListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_authenticated, method: onJWTAuthenticated }

    acme_api.event.jwt_invalid_listener:
        class: App\EventListener\JWTInvalidListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_invalid, method: onJWTInvalid }

    App\EventListener\LogoutListener:
        tags:
            - { name: kernel.event_listener, event: 'Symfony\Component\Security\Http\Event\LogoutEvent', method: onLogout, priority: -100 }

    App\EventListener\UserListener:
        tags:
            - name: "doctrine.event_listener"
              event: "prePersist"
            - name: "doctrine.event_listener"
              event: "preUpdate"

    App\EventListener\MediaImageListener:
        tags:
            - name: "doctrine.event_listener"
              event: "postUpdate"

    App\EventListener\MediaFileListener:
        tags:
            - name: "doctrine.event_listener"
              event: "postUpdate"
